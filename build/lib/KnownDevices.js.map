{
  "version": 3,
  "sources": ["../../src/lib/KnownDevices.ts"],
  "sourcesContent": ["//state will be created if canSwitchOnOff: true or type includes 'detection'\n\nimport {WebSocketDevice} from './WebSocketDevice';\nimport {SoapMotionDetector, SoapSwitch} from './soapDevice';\nimport {SoapSieren} from './SoapSierene';\nimport {Mydlink} from './mydlink';\nimport {Device} from './Device';\n\nexport interface DeviceConstructor<T> {\n    new (adapter: Mydlink, ip: string, pin: string, pinEncrypted: boolean): T;\n}\n\nexport interface DeviceFlags<Type extends Device> {\n    type: string;\n    canSwitchOnOff?: boolean;\n    hasTemp?: boolean;\n    hasPower?: boolean;\n    hasTotalPower?: boolean;\n    hasLastDetected?: boolean;\n    numSockets?: number;\n    DeviceType: DeviceConstructor<Type>;\n    moreSetup?(d: Device): void;\n}\n\nexport const KnownDevices : Record<string, DeviceFlags<any>> = {\n    'DSP-W215': {\n        type: 'Smart plug',\n        canSwitchOnOff: true,\n        hasTemp: true,\n        hasPower: true,\n        hasTotalPower: true,\n        hasLastDetected: false,\n        DeviceType: SoapSwitch\n    },\n    'DCH-S150': {\n        type: 'Motion detection',\n        canSwitchOnOff: false,\n        hasTemp: false,\n        hasPower: false,\n        hasTotalPower: false,\n        hasLastDetected: true,\n        DeviceType: SoapMotionDetector\n    },\n    'DCH-S220': {\n        type: 'Sirene',\n        canSwitchOnOff: false,\n        hasTemp: false,\n        hasPower: false,\n        hasTotalPower: false,\n        hasLastDetected: false,\n        DeviceType: SoapSieren\n    },\n    /*'DCH-S160-UNTESTED': {\n        type: 'Water detection', //'sensor.alarm.flood'\n        canSwitchOnOff: false,\n        hasTemp: false,\n        hasPower: false,\n        hasTotalPower: false,\n        hasLastDetected: true,\n        DeviceType: Device\n    },*/\n    'DSP-W115': {\n        type: 'Smart plug',\n        canSwitchOnOff: true,\n        hasTemp: false,\n        hasPower: false,\n        hasTotalPower: false,\n        hasLastDetected: false,\n        DeviceType: WebSocketDevice\n    },\n    'DSP-W118': {\n        type: 'Smart plug',\n        canSwitchOnOff: true,\n        hasTemp: false,\n        hasPower: false,\n        hasTotalPower: false,\n        hasLastDetected: false,\n        DeviceType: WebSocketDevice\n    },\n    'DSP-W245': {\n        type: 'Smart plug',\n        canSwitchOnOff: true,\n        numSockets: 4,\n        hasTemp: false,\n        hasPower: false,\n        hasTotalPower: false,\n        hasLastDetected: false,\n        DeviceType: WebSocketDevice,\n        moreSetup: (device) => { (device as WebSocketDevice).numSockets = 4 }\n    }\n};\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA,6BAA8B;AAC9B,wBAA6C;AAC7C,yBAAyB;AAoBlB,MAAM,eAAkD;AAAA,EAC3D,YAAY;AAAA,IACR,MAAM;AAAA,IACN,gBAAgB;AAAA,IAChB,SAAS;AAAA,IACT,UAAU;AAAA,IACV,eAAe;AAAA,IACf,iBAAiB;AAAA,IACjB,YAAY;AAAA,EAChB;AAAA,EACA,YAAY;AAAA,IACR,MAAM;AAAA,IACN,gBAAgB;AAAA,IAChB,SAAS;AAAA,IACT,UAAU;AAAA,IACV,eAAe;AAAA,IACf,iBAAiB;AAAA,IACjB,YAAY;AAAA,EAChB;AAAA,EACA,YAAY;AAAA,IACR,MAAM;AAAA,IACN,gBAAgB;AAAA,IAChB,SAAS;AAAA,IACT,UAAU;AAAA,IACV,eAAe;AAAA,IACf,iBAAiB;AAAA,IACjB,YAAY;AAAA,EAChB;AAAA,EAUA,YAAY;AAAA,IACR,MAAM;AAAA,IACN,gBAAgB;AAAA,IAChB,SAAS;AAAA,IACT,UAAU;AAAA,IACV,eAAe;AAAA,IACf,iBAAiB;AAAA,IACjB,YAAY;AAAA,EAChB;AAAA,EACA,YAAY;AAAA,IACR,MAAM;AAAA,IACN,gBAAgB;AAAA,IAChB,SAAS;AAAA,IACT,UAAU;AAAA,IACV,eAAe;AAAA,IACf,iBAAiB;AAAA,IACjB,YAAY;AAAA,EAChB;AAAA,EACA,YAAY;AAAA,IACR,MAAM;AAAA,IACN,gBAAgB;AAAA,IAChB,YAAY;AAAA,IACZ,SAAS;AAAA,IACT,UAAU;AAAA,IACV,eAAe;AAAA,IACf,iBAAiB;AAAA,IACjB,YAAY;AAAA,IACZ,WAAW,CAAC,WAAW;AAAE,MAAC,OAA2B,aAAa;AAAA,IAAE;AAAA,EACxE;AACJ;",
  "names": []
}
