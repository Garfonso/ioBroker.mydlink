{
  "version": 3,
  "sources": ["../../src/lib/Clients.ts"],
  "sourcesContent": ["export interface Client {\n    /**\n     * Read state(s) of socket/device index. Use -1 to get all states.\n     * @param index\n     */\n    state(index?: number) : Promise<boolean | Array<boolean>>;\n\n    /**\n     * Login to real device using device info\n     */\n    login() : Promise<boolean>;\n\n    /**\n     * Close connection, i.e. clean up.\n     */\n    disconnect() : void;\n\n    /**\n     * Should return true if device is ready to use and false otherwise.\n     */\n    isDeviceReady(): Promise<boolean> | boolean;\n}\n\nexport interface SoapClientInterface extends Client {\n    getDeviceSettings():  Promise<Record<string, string>>;\n    lastDetection(): Promise<number>;\n    temperature(): Promise<number>;\n    consumption(): Promise<number>;\n    totalConsumption(): Promise<number>;\n    reboot(): Promise<boolean>;\n    getDeviceDescriptionXML(): Promise<{deviceSettingsXML: string, modulesSoapActions: string}>;\n    getSoundPlay(): Promise<boolean>;\n    setSoundPlay(sound: number, volume: number, duration : number) : Promise<boolean>;\n    setAlarmDismissed(): Promise<boolean>;\n\n    /**\n     * Change the state of a socket.\n     * @param on new value of switch.\n     */\n    switch(on: boolean) : Promise<boolean | void>;\n}\n"],
  "mappings": ";;;;;;;;;;;;;;AAAA;AAAA;",
  "names": []
}
